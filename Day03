let id = Symbol(123);
const anotherId = Symbol(123);
console.log(id === anotherId); //false


                                                      /* Arrays and Object */
                                           
let id = (123);
const anotherId = (123);
console.log(id === anotherId); //true


const heros = ["amit" , "sarvesh" , "gupta"];
heros.push("immortal");

let myObj = {
    name : "Sarvesh", 
    age: 18,
}

const myfunct = function(){
    console.log(sarvesh);
}

console.log(heros)
console.log(typeof heros); //object
console.log(typeof myfunct); // function
console.log(typeof myObj); // object




                                                              /* Stack and Heap Memory */



/*
Stack(Primitive)
Heap(Non- Primitive)

In primitive data types we get a copy of a variable 
but in non primitive data types we get a refrence of a variable..

*/

let name = "sarvesh";
let anotherName = name;
anotherName = "gupta";

console.log(name);
console.log(anotherName);

let userOne = {
    name : "sarveshguptagkp18@gmail.com",
    age: 22
}

let usertwo = userOne;
usertwo.name = "bookexpo1810@gmail.com";

console.log(usertwo);
console.log(userOne);



                                                                  /* Strings*/


name = "SArvesh";
title = "gupta";
//Back tick helps in string interpolation
console.log(`Hello my name is ${name.toUpperCase()} + ${title.toLowerCase()}`)



const gameName = new String("SarVEshgupta");
//This gives us a key value pair

console.log(gameName[0]);
console.log(gameName.__proto__);
console.log(gameName.length)
console.log(gameName.toLowerCase());
console.log(gameName.charAt(2));
console.log(gameName.indexOf('e'))

const newGame = gameName.substring(2,11);
console.log(newGame);

const anNewGame  = gameName.slice(-12,9);
console.log(anNewGame);

const newStringOne = "     sarvesh   ";
console.log(newStringOne);
console.log(newStringOne.trim())


const url = "https://github.com/SARVESH2120/21DaysJS/edit/main/Day03"
console.log(url.replace('20' , '18'));
console.log(url.includes('SARVESH'));
console.log(url.split('/'));




                                                                  /* Maths and Numbers */


                                                                      /*Numbers*/
const score = 400;
console.log(score)

const balance = new Number(500);
console.log(balance.toString().length)
console.log(balance.toFixed(2))

const otherNumber = 12345.89645;
console.log(otherNumber.toPrecision(5));

const hundreds = 1000000;
console.log(hundreds.toLocaleString())


                                                                      /*Maths*/

console.log(Math.abs(-4));
console.log(Math.round(4.6));
console.log(Math.ceil(4.2));
console.log(Math.floor(4.9));
console.log(Math.min(4,3,6,8,9));
console.log(Math.max(4,3,6,8,9));

console.log(Math.floor(Math.random()*10)+1);

const min = 10;
const max = 20;


// Imp 
console.log(Math.floor(Math.random() * (max - min + 1) + min ));




                                                        /* Date and Time*/

let myDate = new Date();
console.log(myDate.getFullYear())
console.log(myDate.getMonth() + 1)
console.log(myDate.toString())
console.log(myDate.toISOString())

console.log(myDate.toLocaleDateString())  // 27/11/2023
console.log(myDate.toLocaleTimeString()) // 6:24:03 pm
console.log(myDate.toLocaleString())  // 27/11/2023, 6:24:38 pm

let createdDate = new Date(2024, 0 , 1);
// let createdDate = new Date("06-15-2024");
console.log(createdDate.toDateString());

let myTimeStamp = Date.now();
console.log(myTimeStamp);
console.log(createdDate.getTime())

console.log(Math.floor(Date.now()/100));  //converting in second




                                                    /*Array*/









